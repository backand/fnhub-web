{"version":3,"sources":["scripts/app.js"],"names":["angular","module","component","templateUrl","bindings","function","onRunLaunch","controller","$log","$stateParams","Lambda","$state","toaster","_","blockUI","$rootScope","$scope","Analytics","initialization","function_id","$ctrl","iD","Error","parameters","copy","getParameters","isSaveParamEnable","onChanges","info","isFirstChange","updateParameters","launchFunction","enableSaveParams","saveParams","clearParamValues","forEach","p","value","params","saveParameters","then","form","$setPristine","func","funcId","name","trim","start","track","runFunction","response","saveRun","Payload","data","StatusCode","status","success","stop","error","errorMessage","resultSet","runInstance","executionTime","now","isFunction","this","$onInit","$onChanges","LambdaLauncherEvent","$on","e","d","onSelect","ENV_CONFIG","$injector","App","getFunctions","pageSize","filter","fieldName","operator","functionsHandler","get","go","ROUTE_LOGIN_STATE","$base64","encode","app","reload","logout","functions","length","updateFunctionParameters","fn","find","Number","isSmallDevice","setDetailView","selectFn","f","funcParams","storedParams","inputParameters","split","map","isEmpty","isEqual","key","camelCase","getRandomColor","letters","color","i","Math","floor","random","$watch","getRuns","newV","runs","$detectViewPort","getFunction","getRun","functionId","activeTab","$emit","back","eventHandler","warn","$uibModal","Auth","appName","providers","socialProviders","err","decode","getSocialProviders","log","socialSignin","provider","ROUTE_HOME_STATE","error_description","signin","user","forgotPassword","open","backdrop","resolve","isSigning","isAuthenticated","isLoggedIn","currentUser","$event","preventDefault","state","to","toParams","from","fromParams","template","Backand","$timeout","resetPassword","password","token","close","dismiss","requestResetPassword","username","closeModal","pop","cancelModal","$value","cancel","run","window","undefined","getCurrentUser","AutherizeRoutes","unregisterListner","event","$$route","isLoginRequired","requiresLogin","pageTitle","title","$inject","config","$logProvider","$httpProvider","$localStorageProvider","anonymousToken","queryParams","getUrlParams","location","href","urlSegments","getUrlSeg","isDebug","ENV","debugEnabled","t","console","interceptors","push","setKeyPrefix","set","useAnonymousTokenByDefault","backand","init","url","keyValue","queryString","keyValuePairs","pair","decodeURIComponent","replace","indexOf","segs","directive","require","restrict","scope","match","link","elem","attrs","ctrl","modelValue","isUndefined","$modelValue","$$invalidModelValue","$pristine","currentValue","$setValidity","items","props","out","isArray","keys","Object","item","itemMatches","prop","text","toLowerCase","toString","LambdaService","$q","$localStorage","deffered","defer","invoke","method","self","reject","promise","fnId","action","isString","post","fId","fParams","fp","pIdx","findIndex","splice","storeParameter","list","param","extend","r","unshift","flag","service","constant","BASE_URL","appTitle","signUpToken","onDetectViewPort","element","attributes","viewPortWidth","parent","clientWidth","setViewPortWidth","determineDevice","$this","deviceType","isBlocking","getbyte64","s","idx","ALPHA","charAt","pads","b10","imax","PADCHAR","x","String","fromCharCode","join","getbyte","charCodeAt","arguments","authInterceptor","requestError","rejection","responseError","envConstants","isManagingRefreshToken","getUsername","defaults","factory","AuthService","getUserDetails","details","current","transitionTo","onSignin","credentials","signout","clearSession","BACKAND_user","verifyRoute","identify","fullName","AppService","functionDetailView","google","label","className","github","facebook","twitter","adfs","azuread","getDetailView","AnalyticsService","email","analytics","createdAt","Date","getTime","JacoRecorder","eventName","eventObject","attributeName","attributeValue","routerConfig","$stateProvider","$urlRouterProvider","when","absolute","views","function-detail","otherwise","$location","path","$templateCache","put"],"mappings":"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","file":"scripts/app-06df8c47d1.js","sourcesContent":["/**\n * @ngdoc module\n * @name LambdaLauncher\n *\n * @module LambdaLauncher\n *\n * @description\n * Create main module (Application) with core dependencies\n * \n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n\n  angular\n    .module('LambdaLauncher', [\n      'ngResource',\n      'ngAnimate',\n      /**\n       * @module backand\n       *\n       * @description\n       * The backand module provides Backand SDK APIs\n       */\n      'backand',\n      /**\n       * @module ui.router\n       *\n       * @description\n       * AngularUI Router is a routing framework, which implements flexible routing with nested views in AngularJS.\n       */\n      'ui.router',\n      /**\n       * @module ui.router.components\n       *\n       * @description\n       * polyfil to support routes in angular new components\n       */\n      'ui.router.components',\n\n      /**\n      * @module LambdaLauncher.envConfig\n      *\n      * @description\n      * A module which is created dynamically during build/serve process. This module has a constant service ENV_CONFIG which serves configurations from .env file.\n      * .env file is a ENV specific file\n      */\n      'LambdaLauncher.envConfig',\n      'toaster',\n      'ui.bootstrap',\n      'ngStorage',\n      'ngColorThis',\n      'hm.readmore'\n    ]);\n})();\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.parameters\n *\n * @module LambdaLauncher\n *\n * @description\n * parameters component - A component to configure settings of an application\n *\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('parameters', {\n      templateUrl: 'app/components/functions/parameters/parameters.html',\n      bindings: {\n        function: '<',\n        onRunLaunch: '&'\n      },\n      controller: [\n        '$log',\n        '$stateParams',\n        'Lambda',\n        '$state',\n        'toaster',\n        '_',\n        'blockUI',\n        '$rootScope',\n        '$scope',\n        'Analytics',\n        function ($log, $stateParams, Lambda, $state, toaster, _, blockUI, $rootScope, $scope, Analytics) {\n          var $ctrl = this, function_id;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n          $ctrl.$onChanges = onChanges;\n\n          /**\n           * public methods\n           */\n          $ctrl.updateParameters = updateParameters;\n          /**\n           * public properties\n           */\n\n          /**\n            * @function\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n            function_id = $ctrl.function.iD;\n            if (!function_id) {\n              function_id = $stateParams.function_id;\n              if (!function_id)\n                throw Error('function_id not found');\n            }\n\n            $ctrl.parameters = angular.copy(Lambda.getParameters(function_id));\n            $ctrl.isSaveParamEnable = Lambda.isSaveParamEnable(function_id);\n          }\n\n          function onChanges(bindings) {\n            $log.info('Parameters', bindings);\n            if (!bindings.function.isFirstChange()) {\n            }\n\n          }\n          /**\n           * @function updateParameters\n           * @description update parameters value\n           * \n           * @returns void\n           */\n          function updateParameters() {\n            launchFunction($ctrl.function, $ctrl.parameters);\n            Lambda.enableSaveParams($ctrl.function.iD, $ctrl.isSaveParamEnable);\n            saveParams();\n          }\n          function clearParamValues() {\n            if ($ctrl.isSaveParamEnable) {\n              return;\n            }\n            _.forEach($ctrl.parameters, function (p) {\n              p.value = '';\n            })\n          }\n\n          function saveParams() {\n            var params = angular.copy($ctrl.parameters);\n            Lambda\n              .saveParameters(function_id, params)\n              .then(function () {\n                $ctrl.form.$setPristine();\n                $log.info('Parameters updated.');\n              });\n          }\n\n          function launchFunction(func, params) {\n            var funcId = func.iD, parameters;\n\n            if (params) {\n              parameters = params;\n            } else {\n              parameters = Lambda\n                .getParameters(funcId);\n            }\n\n            params = {};\n            _.forEach(parameters, function (p) {\n              params[p.name.trim()] = p.value;\n            });\n            blockUI.start();\n            Analytics.track('ll_runfunction');\n            Lambda\n              .runFunction(func.name, params)\n              .then(function (response) {\n                saveRun(funcId, {\n                  Payload: response.data,\n                  StatusCode: response.status\n                });\n                toaster.success('Success', 'Function was executed successfully.');\n                $log.info('Function run successful', response);\n                blockUI.stop();\n                clearParamValues();\n              }, function (error) {\n                toaster.error('Error', 'Error occurred while executing function.');\n                $log.error('Function run error', error);\n                saveRun(funcId, {\n                  Payload: error.data.errorMessage || error.data,\n                  StatusCode: error.status\n                });\n                blockUI.stop();\n              });\n          }\n\n          function saveRun(funcId, resultSet) {\n            $log.info(resultSet);\n            var runInstance = angular.copy(resultSet);\n            runInstance.executionTime = _.now();\n            Lambda.saveRun(funcId, runInstance);\n\n            if (_.isFunction($ctrl.onRunLaunch)) {\n              $ctrl.onRunLaunch();\n            }\n          }\n\n          var LambdaLauncherEvent = $rootScope.$on('EVENT:LAUNCH_FUNCTION', function (e, d) {\n            if (d.function.iD == $ctrl.function.iD) {\n              updateParameters();\n            }\n          });\n          $scope.$on('$destroy', function () {\n            LambdaLauncherEvent();\n          });\n\n          //end of controller\n        }]\n    })\n})();\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.functionsList\n *\n * @module LambdaLauncher\n *\n * @description\n * Lambda functions list component - Manage applications Lambda functions\n *\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('functionsList', {\n      bindings: {\n        onSelect: '&'\n      },\n      templateUrl: 'app/components/functions/list/functions.list.html',\n      controller: [\n        'Lambda',\n        '$log',\n        '$state',\n        '_',\n        'toaster',\n        'blockUI',\n        'ENV_CONFIG',\n        '$injector',\n        'App',\n        '$scope',\n        function (Lambda, $log, $state, _, toaster, blockUI, ENV_CONFIG, $injector, App, $scope) {\n          var $ctrl = this;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n\n          /**\n           * public methods\n           */\n          $ctrl.getRandomColor = getRandomColor;\n          $ctrl.selectFn = selectFn;\n          /**\n           * public properties\n           */\n          $ctrl.App = App;\n\n          /**\n            * @function\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n            $ctrl._ = _;\n            $ctrl.$state = $state;\n            getFunctions();\n          }\n\n          function getFunctions() {\n            var params = {\n              pageSize: 200,\n              filter: [\n                {\n                  fieldName: \"actionType\",\n                  operator: \"equals\",\n                  value: \"Function\"\n                }\n              ]\n            };\n            blockUI.start();\n            Lambda\n              .getFunctions(params)\n              .then(function (data) {\n                blockUI.stop();\n                functionsHandler(data);\n              }).catch(function (error) {\n                blockUI.stop();\n                $log.error(error);\n                /**\n                 * @todo \n                 * This has to be moved to authInterceptor\n                 * authInterceptor does not catch response error of a XHR request which is invoked by Bankand.invoke()\n                 * discussed with @relly\n                 */\n                $injector.get('$state').go(ENV_CONFIG.ROUTE_LOGIN_STATE, { error: $base64.encode(error.data), app: $state.params.app }, { reload: true });\n                $injector.get('Auth').logout();\n              });\n          }\n\n          function functionsHandler(data) {\n            var functions = data || [];\n            $ctrl.functions = functions;\n            if (functions.length > 0) {\n              updateFunctionParameters(functions);\n              if ($ctrl.$state.params.function_id) {\n                var fn = _.find($ctrl.functions, { iD: Number($ctrl.$state.params.function_id) });\n                if (fn && !App.isSmallDevice()) {\n                  App.setDetailView(false);\n                  selectFn(fn);\n                }\n              }\n            }\n            if (!$ctrl.$state.params.function_id) {\n              if (!App.isSmallDevice()) {\n                App.setDetailView(false);\n                selectFn($ctrl.functions[0]);\n              }\n            }\n          }\n\n          function updateFunctionParameters(functions) {\n            _.forEach(functions, function (f) {\n              $log.info('function', f);\n              var funcParams, params, storedParams;\n              funcParams = Lambda.getParameters(f.iD);\n              params = _.trim(f.inputParameters) ? _.split(f.inputParameters, ',') : '';\n              storedParams = _.map(funcParams, function (f) {\n                return f.name;\n              });\n\n              if(_.isEmpty(f.inputParameters)){\n                 Lambda\n                  .saveParameters(f.iD, []);\n              }else if ((!_.isEmpty(f.inputParameters) && !funcParams) || !_.isEqual(params, storedParams)) {\n                $log.info('inputParameters', f);\n               \n                params = _.map(params, function (p) {\n                   var value = _.find(funcParams, { key : _.camelCase(p) });\n                  return {\n                    name: p,\n                    value: _.get(value,'value') || '',\n                    key: _.camelCase(p)\n                  }\n                });\n                Lambda\n                  .saveParameters(f.iD, params);\n              }\n            });\n          }\n\n          function getRandomColor() {\n            var letters = '0123456789ABCDEF';\n            var color = '#';\n            for (var i = 0; i < 6; i++) {\n              color += letters[Math.floor(Math.random() * 16)];\n            }\n            return color;\n          }\n\n          function selectFn(fn) {\n            if (App.isSmallDevice()) {\n              App.setDetailView(true);\n            }\n            $state.go('dashboard.appFunctions.detail', { function_id: fn.iD });\n          }\n\n          $scope.$watch(function () {\n            return Lambda.getRuns();\n          }, function (newV) {\n            $ctrl.runs = angular.copy(newV);\n          }, true)\n          //end of controller\n        }]\n    });\n})();\n\n/**\r\n * @ngdoc Component\r\n * @name LambdaLauncher.component.functionDetail\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * Lambda function detail component\r\n *\r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .component('functionDetail', {\r\n      bindings: {\r\n      },\r\n      templateUrl: 'app/components/functions/detail/functions.detail.html',\r\n      controller: [\r\n        '$log',\r\n        '_',\r\n        '$stateParams',\r\n        'Lambda',\r\n        'blockUI',\r\n        'toaster',\r\n        '$rootScope',\r\n        'App',\r\n        '$detectViewPort',\r\n        '$scope',\r\n        function ($log, _, $stateParams, Lambda, blockUI, toaster, $rootScope, App, $detectViewPort,$scope) {\r\n          var $ctrl = this,\r\n            functionId = $stateParams.function_id;\r\n\r\n          /**\r\n           * component's lifeCycle hooks\r\n           */\r\n          $ctrl.$onInit = initialization;\r\n          /**\r\n           * public methods\r\n           */\r\n          $ctrl.launchFunction = launchFunction;\r\n          $ctrl.onRunLaunch = onRunLaunch;\r\n          $ctrl.back = back;\r\n          /**\r\n           * public properties\r\n           */\r\n          $ctrl.$detectViewPort = $detectViewPort;\r\n          $ctrl.activeTab = 0;\r\n          /**\r\n            * @function\r\n            * @name initialization\r\n            * @description\r\n            * A component's lifeCycle hook which is called after all the controllers on an element have\r\n            * been constructed and had their bindings initialized\r\n            */\r\n          function initialization() {\r\n            getFunction();\r\n            getRuns();\r\n          }\r\n          function getRuns() {\r\n            $ctrl.runs = Lambda.getRun(functionId);\r\n          }\r\n          function getFunction() {\r\n            $ctrl.function = Lambda\r\n              .getFunction(functionId) || {};\r\n          }\r\n\r\n          function onRunLaunch() {\r\n            $ctrl.activeTab = 1;\r\n            getRuns();\r\n          }\r\n\r\n          function launchFunction(fn) {\r\n            $rootScope.$emit('EVENT:LAUNCH_FUNCTION', {\r\n              function: angular.copy(fn)\r\n            })\r\n          }\r\n\r\n          function back() {\r\n            App.setDetailView(false);\r\n          }\r\n\r\n          var eventHandler = $rootScope.$on('EVENT:ON_LOAD_FUNCTIONS', function () {\r\n            getFunction();\r\n          })\r\n\r\n          $scope.$on('$destroy', function () {\r\n            eventHandler();\r\n          });\r\n          //end of controller\r\n        }]\r\n    });\r\n})();\r\n\n/**\r\n * @ngdoc Component\r\n * @name LambdaLauncher.component.functionLog\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * Lambda functions list component - Manage applications Lambda functions\r\n *\r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .component('functionLog', {\r\n      bindings: {\r\n        function: '<',\r\n        runs : '<'\r\n      },\r\n      templateUrl: 'app/components/functions/function-log/function-log.html',\r\n      controller: [\r\n        'Lambda',\r\n        '$log',\r\n        function (Lambda, $log) {\r\n          var $ctrl = this;\r\n\r\n          /**\r\n           * component's lifeCycle hooks\r\n           */\r\n          $ctrl.$onInit = initialization;\r\n\r\n          /**\r\n           * public methods\r\n           */\r\n          /**\r\n           * public properties\r\n           */\r\n\r\n          /**\r\n            * @function\r\n            * @name initialization\r\n            * @description\r\n            * A component's lifeCycle hook which is called after all the controllers on an element have\r\n            * been constructed and had their bindings initialized\r\n            */\r\n          function initialization() {\r\n            $log.warn('function runs ', $ctrl.runs);\r\n            getRuns();\r\n          }\r\n\r\n          function getRuns() {\r\n          }\r\n          //end of controller\r\n        }]\r\n    });\r\n})();\r\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.signin\n * @module LambdaLauncher\n *\n * @description\n * signin component - A application landing page\n * @requires $log, $state, $uibModal, Auth, ENV_CONFIG, blockUI, $injector\n * \n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('signin', {\n      templateUrl: 'app/components/signin/signin.html',\n      controller: [\n        '$log',\n        '$state',\n        '$uibModal',\n        'Auth',\n        'ENV_CONFIG',\n        'blockUI',\n        '$injector',\n        'toaster',\n        'App',\n        function ($log, $state, $uibModal, Auth, ENV_CONFIG, blockUI, $injector, toaster, App) {\n          var $ctrl = this;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n\n          /**\n           * public methods\n           */\n          $ctrl.socialSignin = socialSignin;\n          $ctrl.signin = signin;\n          $ctrl.forgotPassword = forgotPassword;\n          /**\n           * public properties\n           */\n          $ctrl.isSigning = false;\n          $ctrl.isAuthenticated = false;\n          /**\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n            $ctrl.appName = $state.params.app;\n            $ctrl.providers = angular.copy(App.socialProviders);\n            $ctrl.error = $injector.get('$stateParams').err ? $base64.decode($injector.get('$stateParams').err) : '';\n            getSocialProviders();\n          }\n\n          /**\n           * @name getSocialProviders\n           * @description fetch enabled social providers from backand\n           * @returns void\n           */\n          function getSocialProviders() {\n            Auth\n              .getSocialProviders()\n              .then(function (response) {\n                $ctrl.socialProviders = response.data;\n                $log.log('Social Provider collection', response.data);\n              }, function (error) {\n                //handle error\n                $log.error(error);\n              });\n          }\n\n          /**\n           * @name socialSignin\n           * @description signin with social providers[facebook,github ...]\n           * @param {string} provider A name of social provider[facebook,github ...]\n           * @returns void\n           */\n          function socialSignin(provider) {\n            Auth\n              .socialSignin(provider)\n              .then(function () {\n                $state.go(ENV_CONFIG.ROUTE_HOME_STATE, { app: $state.params.app || '' });\n              }, function (error) {\n                //handle error\n                $log.error(error);\n                toaster.error(error.data.error_description);\n              });\n          }\n\n          /**\n           * @name signin\n           * @description signin with credentails[username,password]\n           * @requires $ctrl.user which contains [username,password]\n           * @returns void\n           */\n          function signin() {\n            blockUI.start;\n            Auth\n              .signin($ctrl.user)\n              .then(function (response) {\n                blockUI.stop();\n                $log.info(response);\n              }, function (error) {\n                blockUI.stop();\n                $log.error(error);\n                toaster.error(error.data.error_description);\n              });\n          }\n\n          /**\n           * @name forgotPassword\n           * @description opens Twitter Bootstrap modal\n           * @returns void\n           */\n          function forgotPassword() {\n            $uibModal.open({\n              component: 'requestResetPassword',\n              backdrop: 'static',\n              resolve: {\n              }\n            });\n          }\n\n        }]\n    });\n})();\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.header\n *\n * @module LambdaLauncher\n *\n * @description\n * header component - A application header\n * @requires $log, Auth, App, ENV_CONFIG, $state,blockUI\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('appHeader', {\n      templateUrl: 'app/components/header/header.html',\n      bindings: {\n        isAuthenticated: '<'\n      },\n      controller: [\n        '$log',\n        'Auth',\n        'App',\n        'ENV_CONFIG',\n        '$state',\n        'blockUI',\n        function ($log, Auth, App, ENV_CONFIG, $state, blockUI) {\n          var $ctrl = this;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n          /**\n           * public methods\n           */\n          $ctrl.logout = logout;\n          $ctrl.back = back;\n          /**\n           * public properties\n           */\n\n          /**\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n            $log.info('header component initialized');\n            $ctrl.App = App;\n            $ctrl.appName = $state.params.app;\n            $ctrl.isLoggedIn = Auth.isLoggedIn;\n            $ctrl.currentUser = Auth.currentUser;\n          }\n\n          /**\n           * @name logout\n           * @description logout current user\n           * @param {object} $event An click event object\n           * @returns void\n           */\n          function logout($event) {\n            $event.preventDefault();\n            blockUI.start();\n            Auth.logout().then(function () {\n              blockUI.stop();\n              $state.go(ENV_CONFIG.ROUTE_LOGIN_STATE, {app: $state.params.app || ''}, { reload: true });\n            }, function (error) {\n              blockUI.stop();\n              $log.error('Error on logout - ', error);\n              $state.go(ENV_CONFIG.ROUTE_LOGIN_STATE, {app: $state.params.app || ''}, { reload: true });\n            });\n            $log.info('logout called');\n          }\n\n          /**\n           * @name back\n           * @description navigate to last state \n           * @returns void\n           */\n          function back() {\n            $log.info(App.state);\n            var to, toParams = {};\n            to = App.state.from;\n            toParams = App.state.fromParams;\n            if (to.name === '') {\n              to = 'dashboard.appFunctions';\n              toParams = {app: $state.params.app || ''};\n            } else if (to.name === ENV_CONFIG.ROUTE_LOGIN_STATE && $ctrl.isLoggedIn()) {\n              return;\n            }\n            $state.go(to, toParams);\n          }\n\n          //end of controller\n        }]\n    })\n})();\n\n/**\r\n * @ngdoc Component\r\n * @name LambdaLauncher.component.layout\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * layout component - A application main component which render application layout\r\n *\r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .component('layout', {\r\n      template: '<div class=\"container app-wrapper\"><toaster-container toaster-options=\"{\\'time-out\\': 3000}\"></toaster-container><block-ui></block-ui><div ui-view></div><app-footer></app-footer></div>',\r\n      controller: [\r\n        '$log',\r\n        'Backand',\r\n        '$state',\r\n        'toaster',\r\n        'Auth',\r\n        function ($log, Backand, $state,toaster,Auth) {\r\n          var $ctrl = this;\r\n\r\n          /**\r\n           * component's lifeCycle hooks\r\n           */\r\n          $ctrl.$onInit = initialization;\r\n\r\n          /**\r\n           * public methods\r\n           */\r\n          /**\r\n           * public properties\r\n           */\r\n          /**\r\n            * @function\r\n            * @name initialization\r\n            * @description\r\n            * A component's lifeCycle hook which is called after all the controllers on an element have\r\n            * been constructed and had their bindings initialized\r\n            */\r\n          function initialization() {\r\n            $log.info('app component initialized');\r\n            \r\n            $ctrl.isAuthenticated = Auth.isAuthenticated;\r\n            \r\n          }\r\n        }]\r\n    });\r\n})();\r\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.functions\n *\n * @module LambdaLauncher\n *\n * @description\n * Lambda functions component - Manage applications Lambda functions\n *\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('functions', {\n      templateUrl: 'app/components/functions/functions.html',\n      controller: [\n        'Lambda',\n        '$log',\n        '$state',\n        '_',\n        'toaster',\n        'blockUI',\n        'ENV_CONFIG',\n        '$injector',\n        '$timeout',\n        'App',\n        function (Lambda, $log, $state, _, toaster, blockUI, ENV_CONFIG, $injector, $timeout, App) {\n          var $ctrl = this;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n\n          /**\n           * public methods\n           */\n          $ctrl.onSelect = onSelect;\n          /**\n           * public properties\n           */\n          $ctrl.App = App;\n\n          /**\n            * @function\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n          }\n\n          function onSelect(fn) {\n            $ctrl.function = {};\n            $timeout(function () {\n              $ctrl.function = angular.copy(fn);\n            }, 100);\n\n          }\n\n          //end of controller\n        }]\n    });\n})();\n\n/**\r\n * @ngdoc Component\r\n * @name LambdaLauncher.component.resetPassword\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * resetPassword component - A componet to reset password\r\n *\r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .component('resetPassword', {\r\n      templateUrl: 'app/components/forgotPassword/resetPassword.html',\r\n      controller: [\r\n        'Backand',\r\n        '$log',\r\n        'blockUI',\r\n        'toaster',\r\n        '$stateParams',\r\n        '$state',\r\n        function (Backand, $log, blockUI, toaster, $stateParams, $state) {\r\n          var $ctrl = this;\r\n\r\n          /**\r\n           * component's lifeCycle hooks\r\n           */\r\n          $ctrl.$onInit = initialization;\r\n\r\n          /**\r\n           * public methods\r\n           */\r\n          $ctrl.resetPassword = resetPassword;\r\n          /**\r\n           * public properties\r\n           */\r\n          $ctrl.error = '';\r\n          /**\r\n            * @function\r\n            * @name initialization\r\n            * @description\r\n            * A component's lifeCycle hook which is called after all the controllers on an element have\r\n            * been constructed and had their bindings initialized\r\n            */\r\n          function initialization() {\r\n          }\r\n\r\n          function resetPassword() {\r\n            blockUI.start();\r\n            Backand\r\n              .resetPassword($ctrl.user.password,$stateParams.token)\r\n              .then(function (response) {\r\n                $log.info(response);\r\n                blockUI.stop();\r\n                 toaster.success('Password changed');\r\n                 $state.go('login');\r\n              }, function (error) {\r\n                $ctrl.error = error.data;\r\n                $log.error(error);\r\n                blockUI.stop();\r\n              });\r\n          }\r\n\r\n        }]\r\n    });\r\n})();\r\n\n/**\r\n * @ngdoc Component\r\n * @name LambdaLauncher.component.requestResetPassword\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * requestResetPassword component - A componet to request reset password\r\n *\r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .component('requestResetPassword', {\r\n      bindings: {\r\n        resolve: '<',\r\n        close: '&',\r\n        dismiss: '&'\r\n      },\r\n      templateUrl: 'app/components/forgotPassword/requestResetPassword.html',\r\n      controller: [\r\n        'Backand',\r\n        '$log',\r\n        '$state',\r\n        '_',\r\n        'toaster',\r\n        function (Backand, $log, $state, _, toaster) {\r\n          var $ctrl = this;\r\n\r\n          /**\r\n           * component's lifeCycle hooks\r\n           */\r\n          $ctrl.$onInit = initialization;\r\n\r\n          /**\r\n           * public methods\r\n           */\r\n          $ctrl.requestResetPassword = requestResetPassword;\r\n          $ctrl.cancel = cancelModal;\r\n          /**\r\n           * public properties\r\n           */\r\n          /**\r\n            * @function\r\n            * @name initialization\r\n            * @description\r\n            * A component's lifeCycle hook which is called after all the controllers on an element have\r\n            * been constructed and had their bindings initialized\r\n            */\r\n          function initialization() {\r\n          }\r\n\r\n          function requestResetPassword() {\r\n            Backand\r\n              .requestResetPassword($ctrl.user.username)\r\n              .then(function (response) {\r\n                $log.info(response);\r\n                closeModal();\r\n              }, function (error) {\r\n                $log.error(error);\r\n                toaster.pop('error', \"Error\", error.data);\r\n              });\r\n          }\r\n\r\n          function cancelModal() {\r\n            $ctrl.dismiss({ $value: 'cancel' });\r\n          }\r\n\r\n          function closeModal() {\r\n            $ctrl.close({ $value: 'closed' });\r\n          }\r\n\r\n\r\n        }]\r\n    });\r\n})();\r\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.footer\n *\n * @module LambdaLauncher\n *\n * @description\n * Footer component - A application footer\n *\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('appFooter', {\n      templateUrl: 'app/components/footer/footer.html',\n      controller: [\n        '$log',\n        function ($log) {\n          var $ctrl = this;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n\n          /**\n           * public methods\n           */\n          /**\n           * public properties\n           */\n          /**\n            * @function\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n            $log.info('Footer component initialized');\n          }\n        }]\n    })\n})();\n\n/**\n * @ngdoc Component\n * @name LambdaLauncher.component.default\n *\n * @module LambdaLauncher\n *\n * @description\n * default component - A application default\n *\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n  angular\n    .module('LambdaLauncher')\n    .component('default', {\n      templateUrl: 'app/components/default/default.html',\n      controller: [\n        '$log',\n        function ($log) {\n          var $ctrl = this;\n\n          /**\n           * component's lifeCycle hooks\n           */\n          $ctrl.$onInit = initialization;\n\n          /**\n           * public methods\n           */\n          /**\n           * public properties\n           */\n          /**\n            * @function\n            * @name initialization\n            * @description\n            * A component's lifeCycle hook which is called after all the controllers on an element have\n            * been constructed and had their bindings initialized\n            */\n          function initialization() {\n            $log.info('default component initialized');\n          }\n        }]\n    })\n})();\n\n/**\n * @ngdoc run\n * @name LambdaLauncher.run\n *\n * @module LambdaLauncher\n *\n * @description\n * application run block to configure setting when providers are ready\n * \n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n\n  angular\n    .module('LambdaLauncher')\n    .run(run);\n  /** @ngInject */\n  function run(Auth, $rootScope, App) {\n    //unregister lodadh lib from window. lodadh '_' is available as dependency\n    window._ = undefined;\n    Auth.getCurrentUser();\n    Auth.AutherizeRoutes();\n    //authenticate route before state transition\n  \n    var unregisterListner = $rootScope.$on('$stateChangeStart', function (event, to, toParams, from, fromParams) {\n      var data = (to.$$route) ? to.$$route : to.data;\n      App.isLoginRequired = data.requiresLogin;\n      App.pageTitle = data.title;\n      App.state = {\n        to: to,\n        toParams: toParams,\n        from: from,\n        fromParams: fromParams\n      };\n    });\n    $rootScope.$on('$destroy', unregisterListner);\n  }\n})();\n\n/**\n * @ngdoc config\n * @name LambdaLauncher.config\n *\n * @module LambdaLauncher\n *\n * @description\n * Main application configuration block\n * Initialize all providers and setting up configuration\n * \n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n\n  angular\n    .module('LambdaLauncher')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, ENV_CONFIG, $httpProvider, $localStorageProvider) {\n    var appName, anonymousToken, queryParams = getUrlParams(window.location.href) || {}, urlSegments = getUrlSeg(window.location.href);\n    // Enable log\n    var isDebug = ENV_CONFIG.ENV !== 'prod' ? true : false;\n    $logProvider.debugEnabled(isDebug);\n\n    //#/appName  \n    appName = urlSegments[0];\n\n    anonymousToken = queryParams.t;\n    if (anonymousToken) {\n      try {\n        anonymousToken = $base64.decode(anonymousToken);\n      } catch (error) {\n        console.error('Unable to decode token');\n      }\n    }\n\n    //register authInterceptor to handle authentication\n    $httpProvider.interceptors.push('authInterceptor');\n    $localStorageProvider.setKeyPrefix(appName + '_');\n    //configure backand\n    var config = { appName: appName };\n\n    if (anonymousToken) {\n      config.anonymousToken = anonymousToken;\n      $localStorageProvider.set(\"anonymousToken\" , anonymousToken);\n    }\n    else {\n      config.anonymousToken = $localStorageProvider.get(\"anonymousToken\");\n      if(!config.anonymousToken){\n        config.useAnonymousTokenByDefault = false;\n      }\n\n    }\n\n    console.log('App Initialized with - ', config);\n\n    if(config.appName){\n      backand.init(config);\n    } else {\n      backand.init = null;\n    }\n  }\n  function getUrlParams(url) {\n    var queryString = url.split(\"?\")[1] || '';\n    var keyValuePairs = queryString.split(\"&\");\n    var keyValue, params = {};\n    keyValuePairs.forEach(function (pair) {\n      keyValue = pair.split(\"=\");\n      params[keyValue[0]] = decodeURIComponent(keyValue[1]).replace(\"+\", \" \");\n    });\n    return params;\n  }\n\n  function getUrlSeg(url) {\n    //assume the app name is just after the #/\n    if (url.indexOf('#') === -1) {\n      console.error('URL does not carry appName');\n      return [];\n    }\n    var segs = url.split('#')[1];\n    segs = _.trim(segs, '/');\n    segs = segs.split('/');\n    return segs;\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('LambdaLauncher')\n    .directive('baMatch', ['$rootScope', function($rootScope) {\n      return {\n        require: '?ngModel',\n        restrict: 'A',\n        scope: {\n          match: '=baMatch'\n        },\n        link: function(scope, elem, attrs, ctrl) {\n          if(!ctrl) {\n            console && console.warn('Match validation requires ngModel to be on the element');\n            return;\n          }\n\n          scope.$watch(function() {\n            var modelValue = angular.isUndefined(ctrl.$modelValue)? ctrl.$$invalidModelValue : ctrl.$modelValue;\n            return (ctrl.$pristine && angular.isUndefined(modelValue)) || scope.match === modelValue;\n          }, function(currentValue) {\n            ctrl.$setValidity('match', currentValue);\n          });\n        }\n      };\n    }\n    ])\n\n}());\n\n(function () {\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .filter('propsFilter', function () {\r\n      return function (items, props) {\r\n        var out = [];\r\n\r\n        if (angular.isArray(items)) {\r\n          var keys = Object.keys(props);\r\n\r\n          items.forEach(function (item) {\r\n            var itemMatches = false;\r\n\r\n            for (var i = 0; i < keys.length; i++) {\r\n              var prop = keys[i];\r\n              var text = props[prop] ? props[prop].toLowerCase() : '';\r\n              if (item[prop] && item[prop].toString().toLowerCase().indexOf(text) !== -1) {\r\n                itemMatches = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            if (itemMatches) {\r\n              out.push(item);\r\n            }\r\n          });\r\n        } else {\r\n          // Let the output be the input untouched\r\n          out = items;\r\n        }\r\n\r\n        return out;\r\n      };\r\n    });\r\n})();\n/**\r\n * @ngdoc service\r\n * @name LambdaLauncher.service.Lambda\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * A service to manage Lambda functions\r\n * @requires Backand, $q, $localStorage, _, $timeout\r\n * \r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .service('Lambda', LambdaService);\r\n  /** @ngInject */\r\n  function LambdaService(Backand, $q, $localStorage, _, $timeout, $rootScope) {\r\n    var self = this;\r\n\r\n    /**\r\n     * Exposed bindable methods\r\n     */\r\n    self.getFunctions = getFunctions;\r\n    self.runFunction = runFunction;\r\n    self.getParameters = getParameters;\r\n    self.saveParameters = saveParameters;\r\n    self.getRun = getRun;\r\n    self.getRuns = getRuns;\r\n    self.saveRun = saveRun;\r\n    self.enableSaveParams = enableSaveParams;\r\n    self.isSaveParamEnable = isSaveParamEnable;\r\n    self.getFunction = getFunction;\r\n\r\n\r\n    /**\r\n     * @name getFunctions\r\n     * @description get all available lambda functions of current user\r\n     * \r\n     * @param {object} params Addtional Query parameters\r\n     * @returns promise\r\n     */\r\n    function getFunctions(params) {\r\n      var deffered = $q.defer();\r\n      params = params || {};\r\n      Backand.invoke({\r\n        method: 'GET',\r\n        url: '1/action/config',\r\n        params: params\r\n      }).then(function (response) {\r\n        var functions = _.get(response, 'data.data');\r\n        self.functions = functions || [];\r\n        deffered.resolve(functions);\r\n        $rootScope.$emit('EVENT:ON_LOAD_FUNCTIONS');\r\n      }).catch(function (err) {\r\n        deffered.reject(err);\r\n      });\r\n      return deffered.promise;\r\n    }\r\n\r\n    /**\r\n     * @name getFunction\r\n     * @description get function By iD\r\n     * \r\n     * @param {object} fnId function Id\r\n     * @returns function\r\n     */\r\n    function getFunction(fnId) {\r\n      if (!_.isArray(self.functions)) {\r\n        return;\r\n      }\r\n      return _.find(self.functions, function (f) {\r\n        return f.iD == fnId;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @name runFunction\r\n     * @description Execute lambda function with given parameters\r\n     * \r\n     * @param {string} action Lambda function name\r\n     * @param {object} data A map of parameters {paramName : paramValue}\r\n     * @param {object} params Additional query params\r\n     * @returns promise\r\n     */\r\n    function runFunction(action, data, params) {\r\n      if (!_.isString(action) && _.isEmpty(action)) {\r\n        throw Error('Invalid action');\r\n      }\r\n      data = data;\r\n      if (_.keys(params).length === 0) {\r\n        params = '';\r\n      }\r\n\r\n      if (_.keys(data).length === 0) {\r\n        data = '';\r\n      }\r\n\r\n      return Backand.fn.post(action, params, data);\r\n    }\r\n\r\n\r\n    /**\r\n     * @name getParameters \r\n     * @description returns function parameters[All, By function ID]\r\n     * if function_id is given, it returns that function's parameters else all\r\n     * get paramters from $localStorage service\r\n     * \r\n     * @param {integer} function_id A function ID which is an optional\r\n     * @returns {array|object}\r\n     */\r\n    function getParameters(function_id) {\r\n      var params;\r\n      if (function_id) {\r\n        params = $localStorage.parameters ? $localStorage.parameters[function_id] : undefined;\r\n      } else {\r\n        params = $localStorage.parameters || undefined;\r\n      }\r\n      return params;\r\n    }\r\n\r\n\r\n    /**\r\n     * @name saveParameters \r\n     * @description stores function parameters[By function ID]\r\n     * stores paramters in $localStorage service - in $localStorage.parameters\r\n     * $localStorage.parameters : {\r\n     *   f_1 : [{\r\n     *     name : 'paramName',\r\n     *     value : 'paramValue',\r\n     *     key : param key - this is slugify title \r\n     *    }],\r\n     *   f_2 : [],\r\n     *   f_3 : []\r\n     * }\r\n     * where f_1,f_2,f_3 are function Ids\r\n     * @param {integer} function_id A function ID which is an optional\r\n     * @returns promise {array|object}\r\n     */\r\n    function saveParameters(fId, params) {\r\n      var deffered = $q.defer();\r\n      if (!fId) {\r\n        $timeout(function () {\r\n          deffered.resolve(parameters);\r\n        }, 1);\r\n        return deffered.promise;\r\n      }\r\n      var parameters = getParameters();\r\n      parameters = parameters || {};\r\n      var fParams = parameters[fId] || [];\r\n\r\n      if (_.isArray(params) && params.length > 0) {\r\n        _.forEach(fParams, function (fp) {\r\n          var pIdx = _.findIndex(params, { key: fp.key });\r\n          if (pIdx === -1) {\r\n            fParams.splice(pIdx, 1);\r\n          }\r\n        });\r\n\r\n        _.forEach(params, function (p) {\r\n          storeParameter(fParams, p);\r\n        })\r\n      } else if (_.isArray(params) && params.length === 0) {\r\n        fParams.length =0;\r\n      } else {\r\n        storeParameter(fParams, params);\r\n      }\r\n      parameters[fId] = fParams;\r\n      $localStorage.parameters = parameters;\r\n      $timeout(function () {\r\n        deffered.resolve(parameters);\r\n      }, 1);\r\n      return deffered.promise;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description An helper function\r\n     * user to prepare a list of parameters to be save in $localStorage\r\n     * @param {array} list An array of parameters\r\n     * @param {object} param A parameter to be saved \r\n     * @returns array of parameters\r\n     */\r\n    function storeParameter(list, param) {\r\n      var pIdx = _.findIndex(list, { key: param.key });\r\n      if (pIdx >= 0) {\r\n        list[pIdx] = angular.extend(list[pIdx], param);\r\n      } else {\r\n        list.push(param);\r\n      }\r\n\r\n      return list;\r\n    }\r\n\r\n    /**\r\n     * @name getRun\r\n     * @description get run from $localStorage by functionID\r\n     * \r\n     * @param {integer} fnId Function ID\r\n     * @returns array |object\r\n     */\r\n    function getRun(fnId) {\r\n      var r, runs = _.get($localStorage, 'runs');\r\n      runs = runs || {};\r\n\r\n      r = _.get(runs, fnId);\r\n\r\n      return _.isArray(r) ? r : [];\r\n    }\r\n\r\n    /**\r\n     * @name getRuns\r\n     * @description get all runs from $localStorage\r\n     * \r\n     * @returns array |object\r\n     */\r\n    function getRuns() {\r\n      var r, runs = _.get($localStorage, 'runs');\r\n      runs = runs || {};\r\n      return runs;\r\n    }\r\n\r\n    /**\r\n     * @name saveRun\r\n     * @description stores result of lambda function execution in $localStorage.runs\r\n     * $localStorage.runs = {\r\n     *   f_1 : [{\r\n     *    StatusCode : 200,\r\n     *    executionTime : 4783683289,\r\n     *    Payload : responseBody\r\n     *   }],\r\n     *   f_2 : [{....}]\r\n     *   f_3 : [{....}]\r\n     * }\r\n     * where f_1,f_2,f_3 are function Ids\r\n     * \r\n     * @param {integer} fId Lambda function Id \r\n     * @param {object} run Result of lambda function's execution\r\n     * \r\n     * @returns void\r\n     */\r\n    function saveRun(fId, run) {\r\n      var r, runs = _.get($localStorage, 'runs') || {};\r\n      r = _.isArray(runs[fId]) ? runs[fId] : [];\r\n      if (r.length >= 5) {\r\n        r.unshift(run);\r\n        r.length = 5;\r\n      } else {\r\n        r.unshift(run);\r\n      }\r\n      runs[fId] = r;\r\n      $localStorage.runs = angular.copy(runs);\r\n    }\r\n\r\n    /**\r\n     * @name enableSaveParams\r\n     * @description Update boolean flag= true against a function\r\n     * \r\n     * @param {integer} funcId function ID\r\n     * @param {boolean} flag\r\n     * @returns void\r\n     */\r\n    function enableSaveParams(funcId, flag) {\r\n      var functions = $localStorage.functions || {};\r\n      functions[funcId] = flag;\r\n      $localStorage.functions = functions;\r\n    }\r\n    /**\r\n     * @name isSaveParamEnable\r\n     * @description checks if boolean flag = true against a function\r\n     * \r\n     * @param {integer} funcId \r\n     * @returns \r\n     */\r\n    function isSaveParamEnable(funcId) {\r\n      return $localStorage.functions && $localStorage.functions[funcId];\r\n    }\r\n\r\n    //end of service  \r\n  }\r\n})();\nangular.module(\"LambdaLauncher.envConfig\", [])\n.constant(\"ENV_CONFIG\", {\"ENV\":\"prod\",\"BASE_URL\":\"https://lambda.backand.io\",\"appTitle\":\"Lambda Functions\",\"appName\":\"lambdalauncher\",\"anonymousToken\":\"03b73277-bb28-40bd-a82b-11c4ea21cfa8\",\"signUpToken\":\"25c065b3-83f7-42f5-b1b8-6c6ce9acde79\",\"ROUTE_HOME_STATE\":\"dashboard.appFunctions\",\"ROUTE_LOGIN_STATE\":\"login\"});\n\n/**\r\n * @ngdoc Directive\r\n * @name LambdaLauncher.directive.detectViewPort\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * detectViewPort staring component with star\r\n * @TODO\r\n * onDetectViewPort callback\r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('LambdaLauncher')\r\n        .directive('detectViewPort', ['$detectViewPort', function($detectViewPort) {\r\n            return {\r\n                restrict: 'A',\r\n                template: '',\r\n                scope: {\r\n                    onDetectViewPort: '&?',\r\n                },\r\n                link: function(scope, element, attributes) {\r\n                    var viewPortWidth = angular.element(element).parent()[0].clientWidth;\r\n                    $detectViewPort.setViewPortWidth(viewPortWidth);\r\n                }\r\n            };\r\n        }])\r\n        .service('$detectViewPort', [function() {\r\n            var $this = this;\r\n            $this.deviceType = '';\r\n            $this.setViewPortWidth = function(viewPortWidth) {\r\n                $this.viewPortWidth = viewPortWidth;\r\n                determineDevice();\r\n            };\r\n            function determineDevice() {\r\n                if ($this.viewPortWidth < 768) {\r\n                    $this.deviceType = 'xs';\r\n                } else if ($this.viewPortWidth >= 768 && $this.viewPortWidth < 992) {\r\n                    $this.deviceType = 'sm';\r\n                } else if ($this.viewPortWidth >= 992 && $this.viewPortWidth < 1200) {\r\n                    $this.deviceType = 'md';\r\n                } else if ($this.viewPortWidth >= 1200) {\r\n                    $this.deviceType = 'lg';\r\n                }\r\n            }\r\n        }])\r\n})();\r\n\n/**\n * @ngdoc constant\n * @name LambdaLauncher.constant\n *\n * @module LambdaLauncher\n *\n * @description\n * create constant services for global use\n * \n * @TODO - Keep adding application specific constants here\n * \n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n\n  angular\n    .module('LambdaLauncher')\n    .constant('APP_CONFIG', {})\n    .constant('_', window._);\n\n})();\n\n/**\r\n * @ngdoc service\r\n * @name LambdaLauncher.service.blockUI\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * blockUI service is used to block UI\r\n * \r\n * \r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .service('blockUI', blockUI)\r\n    .component('blockUi', {\r\n      bindings: {},\r\n      template: '<div class=\"block-ui-container\" data-ng-show=\"$ctrl.isBlocking()\"><div class=\"block-ui-overlay\"></div><div class=\"block-ui-message-container\" aria-live=\"assertive\" aria-atomic=\"true\"><div class=\"block-ui-message\"><div class=\"sk-fading-circle\"><div class=\"sk-circle1 sk-circle\"></div><div class=\"sk-circle2 sk-circle\"></div><div class=\"sk-circle3 sk-circle\"></div><div class=\"sk-circle4 sk-circle\"></div><div class=\"sk-circle5 sk-circle\"></div><div class=\"sk-circle6 sk-circle\"></div><div class=\"sk-circle7 sk-circle\"></div><div class=\"sk-circle8 sk-circle\"></div><div class=\"sk-circle9 sk-circle\"></div><div class=\"sk-circle10 sk-circle\"></div><div class=\"sk-circle11 sk-circle\"></div><div class=\"sk-circle12 sk-circle\"></div></div></div></div></div>',\r\n      controller: ['blockUI', function (blockUI) {\r\n        var $ctrl = this;\r\n        $ctrl.$onInit = function () {\r\n          $ctrl.isBlocking = blockUI.isBlocking;\r\n        }\r\n      }]\r\n    });\r\n  /** @ngInject */\r\n  function blockUI() {\r\n    var self = this, isBlocking;\r\n    self.start = function () {\r\n      isBlocking = true;\r\n    };\r\n    self.stop = function () {\r\n      isBlocking = false;\r\n    }\r\n\r\n    self.isBlocking = function () {\r\n      return isBlocking\r\n    };\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n  window.$base64 = (function $base64() {\r\n    var PADCHAR = '=';\r\n\r\n    var ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n\r\n    function getbyte64(s, i) {\r\n      var idx = ALPHA.indexOf(s.charAt(i));\r\n      if (idx === -1) {\r\n        throw \"Cannot decode base64\";\r\n      }\r\n      return idx;\r\n    }\r\n\r\n    function decode(s) {\r\n      // convert to string\r\n      s = \"\" + s;\r\n      var pads, i, b10;\r\n      var imax = s.length;\r\n      if (imax === 0) {\r\n        return s;\r\n      }\r\n\r\n      if (imax % 4 !== 0) {\r\n        throw \"Cannot decode base64\";\r\n      }\r\n\r\n      pads = 0;\r\n      if (s.charAt(imax - 1) === PADCHAR) {\r\n        pads = 1;\r\n        if (s.charAt(imax - 2) === PADCHAR) {\r\n          pads = 2;\r\n        }\r\n        // either way, we want to ignore this last block\r\n        imax -= 4;\r\n      }\r\n\r\n      var x = [];\r\n      for (i = 0; i < imax; i += 4) {\r\n        b10 = (getbyte64(s, i) << 18) | (getbyte64(s, i + 1) << 12) |\r\n          (getbyte64(s, i + 2) << 6) | getbyte64(s, i + 3);\r\n        x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff, b10 & 0xff));\r\n      }\r\n\r\n      switch (pads) {\r\n        case 1:\r\n          b10 = (getbyte64(s, i) << 18) | (getbyte64(s, i + 1) << 12) | (getbyte64(s, i + 2) << 6);\r\n          x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff));\r\n          break;\r\n        case 2:\r\n          b10 = (getbyte64(s, i) << 18) | (getbyte64(s, i + 1) << 12);\r\n          x.push(String.fromCharCode(b10 >> 16));\r\n          break;\r\n      }\r\n      return x.join('');\r\n    }\r\n\r\n    function getbyte(s, i) {\r\n      var x = s.charCodeAt(i);\r\n      if (x > 255) {\r\n        throw \"INVALID_CHARACTER_ERR: DOM Exception 5\";\r\n      }\r\n      return x;\r\n    }\r\n\r\n    function encode(s) {\r\n      if (arguments.length !== 1) {\r\n        throw \"SyntaxError: Not enough arguments\";\r\n      }\r\n\r\n      var i, b10;\r\n      var x = [];\r\n\r\n      // convert to string\r\n      s = \"\" + s;\r\n\r\n      var imax = s.length - s.length % 3;\r\n\r\n      if (s.length === 0) {\r\n        return s;\r\n      }\r\n      for (i = 0; i < imax; i += 3) {\r\n        b10 = (getbyte(s, i) << 16) | (getbyte(s, i + 1) << 8) | getbyte(s, i + 2);\r\n        x.push(ALPHA.charAt(b10 >> 18));\r\n        x.push(ALPHA.charAt((b10 >> 12) & 0x3F));\r\n        x.push(ALPHA.charAt((b10 >> 6) & 0x3f));\r\n        x.push(ALPHA.charAt(b10 & 0x3f));\r\n      }\r\n      switch (s.length - imax) {\r\n        case 1:\r\n          b10 = getbyte(s, i) << 16;\r\n          x.push(ALPHA.charAt(b10 >> 18) + ALPHA.charAt((b10 >> 12) & 0x3F) +\r\n            PADCHAR + PADCHAR);\r\n          break;\r\n        case 2:\r\n          b10 = (getbyte(s, i) << 16) | (getbyte(s, i + 1) << 8);\r\n          x.push(ALPHA.charAt(b10 >> 18) + ALPHA.charAt((b10 >> 12) & 0x3F) +\r\n            ALPHA.charAt((b10 >> 6) & 0x3f) + PADCHAR);\r\n          break;\r\n      }\r\n      return x.join('');\r\n    }\r\n\r\n    return {\r\n      encode: encode,\r\n      decode: decode\r\n    };\r\n  })();\r\n\r\n})();\n/**\r\n * @ngdoc service\r\n * @name LambdaLauncher.service.authInterceptor\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * A interceptor service to intercept valid request\r\n * \r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .factory('authInterceptor', authInterceptor);\r\n  /** @ngInject */\r\n  function authInterceptor($q, Backand, $localStorage, $injector,_) {\r\n\r\n    return {\r\n      requestError: function (rejection) {\r\n        return $q.reject(rejection);\r\n      },\r\n      response: function (response) {\r\n        return response;\r\n      },\r\n      responseError: function (rejection) {\r\n        var envConstants = $injector.get('ENV_CONFIG');\r\n        if (rejection.status === 401 && !Backand.isManagingRefreshToken()) {\r\n          var errorMessage =\r\n            Backand.getUsername() ?\r\n              'The session has expired, please sign in again.' :\r\n              null;\r\n          $injector.get('$log').error(errorMessage); \r\n          $injector.get('$state').go(envConstants.ROUTE_LOGIN_STATE, { err: errorMessage, app: Backand.defaults.appName }, { reload: true });\r\n          $injector.get('Auth').logout();\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n})();\n/**\r\n * @ngdoc service\r\n * @name LambdaLauncher.service.Auth\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * A service to manage user workflow [Authentication, Signup]\r\n * \r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .service('Auth', AuthService);\r\n  /** @ngInject */\r\n  function AuthService($localStorage, $rootScope, $state, Backand, ENV_CONFIG, $log, App, Analytics) {\r\n    var self = this,\r\n      ROUTE_HOME_STATE = ENV_CONFIG.ROUTE_HOME_STATE || 'dashboard.appFunctions',\r\n      ROUTE_LOGIN_STATE = ENV_CONFIG.ROUTE_LOGIN_STATE || 'login';\r\n    /**\r\n     * @property currentUser\r\n     * stores logged in user\r\n     */\r\n    self.currentUser = {};\r\n    self.getCurrentUser = getCurrentUser;\r\n    self.getSocialProviders = getSocialProviders;\r\n    self.socialSignin = socialSignin;\r\n    self.signin = signin;\r\n    self.logout = logout;\r\n    self.AutherizeRoutes = AutherizeRoutes;\r\n    self.isLoggedIn = isLoggedIn;\r\n\r\n\r\n    /**\r\n     * @name getCurrentUser\r\n     * @description get loggedIn user\r\n     * redirects to ROUTE_HOME_STATE if valid user\r\n     * \r\n     * @returns promise\r\n     */\r\n    function getCurrentUser() {\r\n      if (!Backand.user) //in case Backand was created\r\n        return;\r\n\r\n      return Backand.user.getUserDetails()\r\n        .then(function (response) {\r\n          var data = response.data;\r\n          self.currentUser.details = data;\r\n          $log.info('User -', data);\r\n          if (data !== null) {\r\n            self.currentUser.name = data.username;\r\n            if (ROUTE_LOGIN_STATE === $state.current.name) {\r\n              $state.transitionTo(ROUTE_HOME_STATE, { reload: true, app: $state.params.app }, App.state.toParams);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name getSocialProviders\r\n     * @description Fetch social providers from Backand\r\n     * \r\n     * @returns promise\r\n     */\r\n    function getSocialProviders() {\r\n      if (!Backand.getSocialProviders)\r\n        return;\r\n\r\n      return Backand.getSocialProviders()\r\n        .then(function (response) {\r\n          return response;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @name socialSignin\r\n     * @description Signin to Backand with Social Providers[facebook, github ....]\r\n     * \r\n     * @param {string} provider [facebook, github ....]\r\n     * \r\n     * @returns promise\r\n     */\r\n    function socialSignin(provider) {\r\n      return Backand.socialSignin(provider)\r\n        .then(function (response) {\r\n          onSignin(response.data);\r\n          return response.data;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * @name signin\r\n     * @description Signin to Backand with credentials\r\n     * \r\n     * @param {object} User credentials[username,password] \r\n     * @returns promise\r\n     */\r\n    function signin(credentials) {\r\n      return Backand.signin(credentials.username, credentials.password)\r\n        .then(function (response) {\r\n          onSignin(response.data);\r\n          return response.data;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name logout\r\n     * @description logout from backand\r\n     * \r\n     * @returns promise\r\n     */\r\n    function logout() {\r\n      return Backand.signout().then(function (response) {\r\n        clearSession();\r\n        return response;\r\n      }, function (error) {\r\n        clearSession();\r\n        return error;\r\n      });\r\n    }\r\n    /**\r\n     * @description helper function to clear currentUser's clearSession\r\n     */\r\n    function clearSession() {\r\n      delete $localStorage.BACKAND_user;\r\n      angular.copy({}, self.currentUser);\r\n    }\r\n\r\n\r\n    /**\r\n     * @description check if user is loggedIn\r\n     * @returns boolean\r\n     */\r\n    function isLoggedIn() {\r\n      return self.currentUser.name ? true : false;\r\n    }\r\n\r\n    /**\r\n     * @name AutherizeRoutes\r\n     * @description $stateChangeStart listner to apply logics before state complete\r\n     * unregister listner $stateChangeStart\r\n     * \r\n     */\r\n    function AutherizeRoutes() {\r\n      var unregisterListner = $rootScope.$on('$stateChangeStart', verifyRoute);\r\n      $rootScope.$on('$destroy', unregisterListner);\r\n    }\r\n\r\n    function verifyRoute(event, to, toParams, from) {\r\n      /**\r\n       * @todo route authetication goes here\r\n       */\r\n    }\r\n\r\n    function onSignin(data) {\r\n      Analytics.identify(data.fullName, data.username);\r\n      getCurrentUser();\r\n    }\r\n\r\n    //end of service  \r\n  }\r\n})();\n/**\r\n * @ngdoc service\r\n * @name LambdaLauncher.service.App\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * App service is used to share data globaly\r\n * \r\n * \r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .service('App', AppService);\r\n  /** @ngInject */\r\n  function AppService($detectViewPort) {\r\n    var self = this,\r\n    functionDetailView = false;\r\n    self.pageTitle = '';\r\n    /**\r\n     * social Providers\r\n     */\r\n    self.socialProviders = {\r\n      google: {\r\n        label: 'Google',\r\n        className: 'google'\r\n      },\r\n      github: {\r\n        label: 'Github AUth',\r\n        className: 'github'\r\n      },\r\n      facebook: {\r\n        label: 'Facebook',\r\n        className: 'facebook'\r\n      },\r\n      twitter: {\r\n        label: 'Twitter',\r\n        className: 'twitter'\r\n      },\r\n      adfs: {\r\n        label: 'Adfs',\r\n        className: 'windows'\r\n      },\r\n      azuread: {\r\n        label: 'Azure AD',\r\n        className: 'windows'\r\n      }\r\n    }\r\n\r\n    self.setDetailView = function(flag){\r\n      functionDetailView = flag;\r\n    };\r\n    self.getDetailView = function(){\r\n      return functionDetailView;\r\n    };\r\n\r\n    self.isSmallDevice = function(){\r\n      return $detectViewPort.viewPortWidth <= 768;\r\n    }\r\n  }\r\n\r\n})();\r\n\n/**\r\n * @ngdoc service\r\n * @name LambdaLauncher.service.Analytics\r\n *\r\n * @module LambdaLauncher\r\n *\r\n * @description\r\n * Analytics service is used to call segment\r\n * \r\n * \r\n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('LambdaLauncher')\r\n    .service('Analytics', AnalyticsService);\r\n  /** @ngInject */\r\n  function AnalyticsService() {\r\n    var self = this;\r\n\r\n    self.identify = identify;\r\n    self.track = track;\r\n\r\n    /**\r\n     *\r\n     * @param fullName\r\n     * @param email\r\n     */\r\n    function identify(fullName, email) {\r\n      if (analytics) {\r\n        analytics.identify(email, {\r\n          name: fullName,\r\n          email: email,\r\n          createdAt: new Date().getTime()\r\n        });\r\n      }\r\n      if(window.JacoRecorder){\r\n        window.JacoRecorder.identify(email, function callback(err){});\r\n      }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param eventName\r\n     * @param eventObject\r\n     */\r\n    function track(eventName, eventObject) {\r\n      if (analytics) {\r\n        analytics.track(eventName, eventObject);\r\n      }\r\n      if(window.JacoRecorder){\r\n        window.JacoRecorder.push(['session.setAttribute', {\r\n          attributeName: eventName, attributeValue: eventObject\r\n        }, function (err) {\r\n          if (err) {\r\n            console.error('error setting attribute');\r\n          }\r\n        }]);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n})();\r\n\n/**\n * @ngdoc constant\n * @name LambdaLauncher.config\n *\n * @module LambdaLauncher\n *\n * @description\n * setup application routes\n * @todo move component specific routes to component directory\n * \n * @author Mohan Singh ( gmail::mslogicmaster@gmail.com, skype :: mohan.singh42 )\n */\n(function () {\n  'use strict';\n\n  angular\n    .module('LambdaLauncher')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.when('/{app:[0-9a-zA-Z]{1,}}', '/{app:[0-9a-zA-Z]{1,}}/functions');\n    $stateProvider\n      .state('login', {\n        url: '/{app:[0-9a-zA-Z]{1,}}/login?err&t',\n        component: 'signin',\n        data: {\n          title: 'Login'\n        }\n      })\n      .state('default', {\n        url: '/',\n        component: 'default',\n        data: {\n          title: 'Home Page'\n        }\n      })\n      .state('reset-password', {\n        url: '/{app:[0-9a-zA-Z]{1,}}/reset-password?token',\n        component: 'resetPassword',\n        data: {\n          title: 'Reset Password'\n        }\n      })\n      .state('dashboard', {\n        absolute: true,\n        url: '/{app:[0-9a-zA-Z]{1,}}',\n        data: {\n          requiresLogin: true\n        },\n        template: '<ui-view></ui-view>'\n      })\n      .state('dashboard.appFunctions', {\n        url: '/functions?t',\n        component: 'functions',\n        data: {\n          requiresLogin: true,\n          title: 'Launch Functions'\n        }\n      }).state('dashboard.appFunctions.detail', {\n        url: '/:function_id',\n        views: {\n          'function-detail': {\n            component: 'functionDetail'\n          }\n        },\n        data: {\n          requiresLogin: true,\n          title: 'Launch Functions'\n        }\n      });\n\n    $urlRouterProvider.otherwise(function ($injector, $location) {\n      var state;\n      state = $injector.get('$state');\n      state.go('default', { url: $location.path() }, { location: true });\n    });\n  }\n\n})();\n\nangular.module(\"LambdaLauncher\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/default/default.html\",\"<div class=\\\"container page-signin deafult-page\\\"><app-header></app-header><div class=\\\"jumbotron signIn\\\" block-ui=signin><!-- /login page content --><div class=row><div class=col-sm-12><div><p>Lambda Launcher is a free tool that lets developers easily test and run their Amazon Lambda functions.</p><p>This page is missing \\'App Name\\', so in the meantime, you can view our Lambda Launcher live demo</p><p class=m-b-0><a href=\\\"https://lambda.backand.io/#/lambdademo/functions?t=OGQ5ZGFlYTgtMzQzMi00NWMxLTk3MGItOGVhODE4MGZmMTBk\\\" class=\\\"btn btn-success\\\" target=_blank>See Live Demo</a></p></div></div></div><!-- ./login page content --></div></div>\");\n$templateCache.put(\"app/components/forgotPassword/requestResetPassword.html\",\"<form name=resetRequestFrom novalidate data-ng-submit=$ctrl.requestResetPassword()><div class=\\\"modal-header no-border p-b-sm\\\"><h3 class=\\\"_300 modal-title\\\">Forgot Password</h3><button type=button class=close data-ng-click=$ctrl.cancel() data-dismiss=modal aria-label=Close><i class=\\\"ion-close-round text-lg\\\"></i></button></div><div class=\\\"modal-body p-t-0 p-b-0\\\"><div class=form-group><label class=control-label>Username</label><input type=email class=form-control name=username data-ng-model=$ctrl.user.username placeholder=\\\"Enter your email\\\"></div></div><div class=\\\"modal-footer no-border pb-md\\\"><button class=\\\"btn btn-default\\\" type=button data-ng-click=$ctrl.cancel()>Cancel</button> <button class=\\\"btn btn-primary\\\" type=submit>Request Password</button></div></form>\");\n$templateCache.put(\"app/components/forgotPassword/resetPassword.html\",\"<div class=\\\"container page-signin\\\"><app-header></app-header><div class=\\\"jumbotron signIn\\\"><!-- /login page content --><div class=\\\"signin-form reset-password\\\"><h4 class=text-left><span>Reset Password</span></h4><form class=form-horizontal name=$ctrl.resetPassForm ng-submit=$ctrl.resetPassword() novalidate><fieldset><div class=\\\"alert alert-danger\\\" data-ng-show=$ctrl.error data-ng-bind=$ctrl.error></div><div class=form-group><div class=\\\"input-group input-group-first\\\"><span class=input-group-addon><i class=\\\"fa fa-lock\\\" aria-hidden=true></i> </span><input type=password class=\\\"form-control input-lg\\\" placeholder=Password name=password ng-model=$ctrl.user.password ng-model-options=\\\"{debounce: 200}\\\" ng-minlength=6 ng-maxlength=20 required></div><div class=\\\"text-danger text-left\\\" ng-show=$ctrl.resetPassForm.password.$error.minlength>Password must be at least 6 characters</div><div class=\\\"text-danger text-left\\\" ng-show=$ctrl.resetPassForm.password.$error.email>This is not a valid password.</div></div><div class=form-group><div class=\\\"input-group input-group-first\\\"><span class=input-group-addon><i class=\\\"fa fa-lock\\\" aria-hidden=true></i> </span><input type=password class=\\\"form-control input-lg\\\" placeholder=\\\"Confirm password\\\" name=confirm_password ng-model=$ctrl.user.cpassword ng-model-options=\\\"{debounce: 200}\\\" ng-minlength=6 ng-maxlength=20 required ba-match=$ctrl.user.password></div><div class=\\\"text-danger text-left\\\" ng-show=$ctrl.resetPassForm.confirm_password.$error.match>Please re-enter the same password as above</div></div><div class=\\\"form-group p-b-lg signin-btn\\\"><button type=submit class=\\\"btn btn-lg btn-round btn-primary btn-block text-u-c\\\" data-ng-disabled=$ctrl.resetPassForm.$invalid>Reset</button></div></fieldset></form></div><!-- ./login page content --></div></div>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer hide\\\"><p>© 2017 Backand, Inc.</p></footer>\");\n$templateCache.put(\"app/components/functions/functions.html\",\"<app-header data-is-authenticated=$ctrl.isAuthenticated() data-ng-hide=\\\"$ctrl.App.getDetailView() && $ctrl.App.isSmallDevice()\\\"></app-header><div class=\\\"app-content clearfix\\\" id=app-content data-ng-class=\\\"{\\'top-0\\': $ctrl.App.getDetailView() && $ctrl.App.isSmallDevice()}\\\"><div class=page-appFunctions><div class=\\\"row marketing\\\"><div class=\\\"col-md-4 left-panel\\\" data-ng-hide=\\\"$ctrl.App.getDetailView() && $ctrl.App.isSmallDevice()\\\"><functions-list on-select=$ctrl.onSelect(function)></functions-list></div><div class=\\\"col-md-8 col-md-offset-4\\\" data-ng-hide=\\\"!$ctrl.App.getDetailView() && $ctrl.App.isSmallDevice()\\\"><div ui-view=function-detail class=animated data-ng-class=\\\"{\\'fadeIn\\' : $ctrl.App.isSmallDevice(), \\'fadeInUp\\' : !$ctrl.App.isSmallDevice()}\\\" style=\\\"position: relative\\\"></div><!--function-detail data-ng-if=\\\"$ctrl.function\\\" data-function=\\\"$ctrl.function\\\"></div>--></div></div></div></div>\");\n$templateCache.put(\"app/components/header/header.1.html\",\"<div class=\\\"header signin-header clearfix\\\"><section class=\\\"logo text-center\\\" data-ng-if=!$ctrl.isLoggedIn()><a ui-sref=\\\"login({app: $ctrl.appName})\\\" title=\\\"Lambda Functions\\\"><img src=./assets/images/aws-lambda-launcher-logo.png></a></section><div data-ng-if=$ctrl.isLoggedIn()><nav class=navbar><div class=container><div class=navbar-header><button type=button class=\\\"navbar-toggle collapsed\\\" data-toggle=collapse data-target=#navbar aria-expanded=false aria-controls=navbar><span class=sr-only>Toggle navigation</span> <i class=\\\"fa fa-user-circle-o fa-2x\\\"></i></button><div class=\\\"navbar-brand _300 text-left\\\"><a data-ng-click=$ctrl.back($event) data-ng-href=\\\"\\\" class=text-white><i class=\\\"fa fa-angle-left text-large m-r-md\\\"></i></a> <span data-ng-bind=$ctrl.App.pageTitle class=text-large></span></div></div><div id=navbar class=\\\"navbar-collapse navbar-right collapse m-t-sm\\\" aria-expanded=false><ul class=\\\"nav navbar-nav\\\"><li><a data-ng-href=\\\"\\\"><i class=\\\"fa fa-user-circle-o\\\"></i></a></li><li><a data-ng-href=\\\"\\\" data-ng-click=$ctrl.logout($event)>Log Out</a></li></ul></div><!--/.nav-collapse --></div></nav></div></div>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header clearfix example3\\\" data-ng-if=$ctrl.isLoggedIn()><nav class=\\\"navbar navbar-static-top\\\"><div class=navbar-header><!-- Simple dropdown --> <span uib-dropdown class=\\\"visible-xs navbar-toggle\\\" style=\\\"position: static\\\"><a href id=simple-dropdown uib-dropdown-toggle><i class=\\\"fa fa-user-circle-o\\\"></i></a><ul class=\\\"dropdown-menu pull-right\\\" uib-dropdown-menu aria-labelledby=simple-dropdown><li><a data-ng-href=\\\"\\\" data-ng-click=$ctrl.logout($event)>Log Out</a></li></ul></span><a class=navbar-brand href=/ ><img src=./assets/images/lambda-launcher-icon.png alt=\\\"Lambda launcher\\\" class=hidden-xs> <img src=./assets/images/logo-mobile.png alt=\\\"Lambda launcher\\\" class=visible-xs></a></div><div class=title-bar><h2>Lambda Launcher</h2></div><div id=navbar class=\\\"navbar-collapse collapse\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a data-ng-href=\\\"\\\"><i class=\\\"fa fa-user-circle-o\\\"></i></a></li><li><a data-ng-href=\\\"\\\" data-ng-click=$ctrl.logout($event)>Log Out</a></li></ul></div><!--/.nav-collapse --></nav></div><div class=\\\"header signin-header clearfix\\\" data-ng-if=!$ctrl.isLoggedIn()><section class=\\\"logo text-center\\\"><a ui-sref=\\\"login({app: $ctrl.appName})\\\" title=\\\"Lambda Functions\\\"><img src=./assets/images/lambda-launcher-icon.png alt=\\\"Lambda launcher\\\" class=visible-xs> <img src=./assets/images/aws-lambda-launcher-logo.png class=hidden-xs></a></section></div>\");\n$templateCache.put(\"app/components/signin/signin.html\",\"<div class=\\\"container page-signin\\\"><app-header></app-header><div class=\\\"jumbotron signIn\\\" block-ui=signin><!-- /login page content --><div class=row><div class=col-sm-5><h4 class=text-left>Sign in with</h4><div class=social-providers><div data-ng-repeat=\\\"provider in $ctrl.socialProviders track by $index\\\" class=\\\"m-b-md provider\\\"><button class=\\\"btn btn-lg btn-block btn-social\\\" type=button ng-click=$ctrl.socialSignin(provider.name) data-ng-class=\\\"\\'btn-\\'+ $ctrl.providers[provider.name].className\\\"><i ng-class=\\\"\\'fa-\\' + $ctrl.providers[provider.name].className\\\" class=fa></i><span>{{$ctrl.providers[provider.name].label}}</span></button></div></div></div><div class=col-sm-7><div class=signin-form><h4 class=text-left><span class=hidden-xs>Log In - {{$ctrl.appName}}</span><span class=visible-xs>Or</span></h4><form class=form-horizontal name=signinForm ng-submit=$ctrl.signin() novalidate><fieldset><div class=\\\"alert alert-danger\\\" data-ng-show=$ctrl.error data-ng-bind=$ctrl.error></div><div class=form-group><div class=\\\"input-group input-group-first\\\"><span class=input-group-addon><i class=\\\"fa fa-user\\\" aria-hidden=true></i> </span><input type=email class=\\\"form-control input-lg\\\" name=uEmail placeholder=Username ng-model=$ctrl.user.username ng-model-options=\\\"{updateOn: \\'blur\\'}\\\" required></div><div class=\\\"text-danger ng-hide\\\">This is not a valid email.</div></div><div class=form-group><div class=input-group><span class=input-group-addon><i class=\\\"fa fa-lock\\\" aria-hidden=true></i> </span><input type=password class=\\\"form-control input-lg\\\" placeholder=Password name=uPassword ng-model=$ctrl.user.password ng-model-options=\\\"{debounce: 500}\\\" required></div><div class=\\\"text-danger ng-hide\\\">This is not a valid Password.</div></div><div class=\\\"checkbox m-t-md m-b-lg\\\"><label ng-if=false class=pull-left><input type=checkbox> Remember Me</label><div class=\\\"text-right text-danger pull-right\\\"><a data-ng-href=\\\"\\\" data-ng-click=$ctrl.forgotPassword()>Forgot your password?</a></div></div><div class=\\\"form-group p-b-lg signin-btn\\\"><button type=submit class=\\\"btn btn-lg btn-round btn-primary btn-block text-u-c\\\">login</button></div><div class=\\\"text-right text-danger center\\\"><a ui-sref=\\\"dashboard.appFunctions({app: $ctrl.appName})\\\">guest access -></a></div><div class=ng-hide><a ng-href=\\\"http://localhost:3000/#/dash/app?appName=lambdalauncher&anonymousToken=MDNiNzMyNzctYmIyOC00MGJkLWE4MmItMTFjNGVhMjFjZmE4\\\" target=_blank>App URL - with base64 encoded token</a><br><a ng-href=\\\"http://localhost:3000/#/dash/app?appName=lambdalauncher&anonymousToken=03b73277-bb28-40bd-a82b-11c4ea21cfa8\\\" target=_blank>Without encoded URL</a></div></fieldset></form></div></div></div><!-- ./login page content --></div></div>\");\n$templateCache.put(\"app/components/functions/detail/functions.detail.html\",\"<div class=function-detail><div class=section><div class=section-header><div class=\\\"pull-left m-r section-header-left\\\"><span class=back-btn data-ng-click=$ctrl.back()><i class=\\\"fa fa-angle-left fa-2x\\\"></i> </span><span class=\\\"w-64 circle avatar avatar-text\\\" color-this=background-color data-color=\\\"$ctrl.function[\\'name\\']\\\"><span class=text>{{($ctrl.function.friendlyName || $ctrl.function.name) | limitTo:2}}</span> <i class=\\\"off b-danger\\\"></i></span></div><div class=\\\"clear section-header-right\\\"><h3 class=\\\"m-a-0 text-lg _600 header-title\\\">{{$ctrl.function[\\'friendlyName\\'] || $ctrl.function[\\'name\\']}}</h3><div class=\\\"m-t-sm function-meta\\\" data-ng-if=$ctrl.runs[0]><span class=_300>Last run </span>: <span class=_300>{{ $ctrl.runs[0].executionTime | date : \\'dd/MM/yyyy\\'}}</span> <span class=sep></span> <span class=_300>{{ $ctrl.runs[0].executionTime | date : \\'h:m:s a\\'}}</span></div></div><div class=header-right-absolute><button class=\\\"btn btn-primary p-x-lg\\\" type=button data-ng-click=$ctrl.launchFunction($ctrl.function)>LAUNCH</button></div><div class=\\\"clear fn-description\\\" data-ng-if=$ctrl.function.description><p hm-read-more hm-text=\\\"{{ $ctrl.function.description }}\\\" hm-limit=\\\"{{$ctrl.$detectViewPort.viewPortWidth <= 786 ? $ctrl.$detectViewPort.viewPortWidth / 4.5 : 155}}\\\" hm-more-text=\\\"read more\\\" hm-less-text=\\\" - read less\\\"></p></div></div><div class=section-body data-ng-if=$ctrl.function.iD><uib-tabset active=$ctrl.activeTab class=with-base><uib-tab index=0 heading=Parameters><div class=p-a-md><parameters data-function=$ctrl.function on-run-launch=$ctrl.onRunLaunch()></parameters></div></uib-tab><uib-tab index=1 heading=Log><div class=\\\"p-a-md bg-white\\\"><function-log data-function=$ctrl.function data-runs=$ctrl.runs></function-log></div></uib-tab></uib-tabset></div></div></div>\");\n$templateCache.put(\"app/components/functions/function-log/function-log.html\",\"<div class=logs><div class=scrollable><div class=scrollable-content><ul class=\\\"list m-a-0\\\" data-ng-if=\\\"$ctrl.runs.length > 0\\\"><li class=\\\"list-item p-x-0\\\" data-ng-repeat=\\\"run in $ctrl.runs | orderBy: \\'-executionTime\\' \\\"><div class=row><div class=\\\"col-sm-1 col-xs-2\\\" style=max-width:45px><span class=\\\"w-32 circle avatar avatar-text\\\" data-ng-class=\\\"{\\'btn-success\\' : run.StatusCode == 200, \\'btn-danger\\' : run.StatusCode != 200}\\\"><i class=fa data-ng-class=\\\"{\\'fa-check\\' : run.StatusCode == 200, \\'fa-times\\' : run.StatusCode != 200}\\\"></i></span></div><div class=\\\"col-sm-8 col-xs-7\\\"><pre class=pretify hm-read-more hm-text=\\\"{{ run.Payload}}\\\" hm-limit=\\\"{{$ctrl.$detectViewPort.viewPortWidth <= 786 ? $ctrl.$detectViewPort.viewPortWidth / 4.5 : 155}}\\\" hm-more-text=\\\"read more\\\" hm-less-text=\\\" - read less\\\"></pre></div><div class=\\\"col-sm-3 col-xs-3 pull-right small\\\" style=\\\"padding-right: 0\\\"><div><span class=_300>{{ run.executionTime | date : \\'dd/MM/yyyy\\'}}</span></div><div><span class=_300>{{ run.executionTime | date : \\'h:m:s a\\'}}</span></div></div></div></li></ul></div></div><div class=\\\"alert alert-info\\\" data-ng-if=\\\"$ctrl.runs.length === 0\\\"><p>No log found</p></div></div>\");\n$templateCache.put(\"app/components/functions/parameters/parameters.html\",\"<form class=\\\"form-horizontal parametersForm\\\" data-ng-submit=$ctrl.updateParameters() name=$ctrl.form><div class=\\\"alert alert-info\\\" data-ng-if=\\\"$ctrl.parameters.length === 0\\\"><p>No Input Parameters</p></div><div class=scrollable><div class=scrollable-content><div data-ng-if=\\\"$ctrl.parameters.length > 0\\\"><div class=\\\"form-group row\\\" data-ng-repeat=\\\"param in $ctrl.parameters track by $index\\\"><label for=id_{{::param.name}} class=\\\"col-sm-2 control-label\\\" data-ng-bind=param.name></label><div class=col-sm-10><input type=text class=form-control id=id_{{::param.name}} data-ng-model=param.value placeholder=\\\"\\\"></div></div><div class=\\\"form-group row\\\"><div class=\\\"col-sm-10 col-xs-8 col-sm-offset-2\\\"><div class=checkbox><label><input type=checkbox data-ng-model=$ctrl.isSaveParamEnable> Save parameters</label></div></div></div><div class=form-group><div class=\\\"col-sm-offset-2 col-sm-10 launch-btn\\\"><button type=submit class=\\\"btn btn-primary p-x-lg pull-right\\\">LAUNCH</button></div></div></div></div></div></form>\");\n$templateCache.put(\"app/components/functions/list/functions.list.html\",\"<div class=search><div class=input-group><input type=text class=form-control data-ng-model=$ctrl.searchText placeholder=\\\"Search for...\\\" ng-minlength=2> <span class=input-group-btn><button class=\\\"btn btn-default\\\" type=button><span class=\\\"fa fa-search\\\" data-ng-show=!$ctrl.searchText></span><span data-ng-show=$ctrl.searchText data-ng-click=\\\"$ctrl.searchText = \\'\\'\\\">Clear</span></button></span></div></div><!-- /input-group --><ul class=\\\"list m-a-0\\\"><li class=\\\"list-item hover\\\" data-ng-repeat=\\\"function in $ctrl.functions | propsFilter : { friendlyName : $ctrl.searchText, name : $ctrl.searchText } track by $index\\\" data-ng-click=$ctrl.selectFn(function) data-ng-class=\\\"{\\'active\\': $ctrl.$state.params.function_id == function.iD}\\\"><div class=list-left><span class=\\\"w-48 circle avatar avatar-text\\\" color-this=background-color data-color=function.name><span style=\\\"text-transform: uppercase\\\">{{(function.friendlyName || function.name) | limitTo:2}}</span> <i class=\\\"off b-danger\\\"></i></span></div><div class=list-body><div data-ng-bind=\\\"function.friendlyName || function.name\\\" class=_600></div><small class=text-ellipsis><span class=_300>{{ $ctrl.runs[function.iD][0][\\'executionTime\\'] | date : \\'dd/MM/yyyy | h:m:s a\\'}}</span></small></div></li></ul>\");}]);"],"sourceRoot":"/source/"}